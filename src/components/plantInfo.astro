---

---

<!-- Plant Display -->
<section class="backdrop-blur-md bg-white/50">
    <h1>Plant Name: <span class="plant-name">Plant</span></h1>
    <h2>Scientific Name: <span class="plant-scientific-name">Scientific Name</span></h2>
    <h3>Type: <span class="plant-type">Type</span></h3>
    <h4>Cycle: <span class="plant-cycle">Cycle</span></h4>
    <h5>Watering: <span class="plant-watering">Watering</span></h5>
    <h6>Sunlight: <span class="plant-sunlight">Sunlight</span></h6>
    <h6>Pruning: <span class="plant-pruning">Pruning</span></h6>
    <p>Description: <span class="plant-description">Description</span></p>
    <img id="plant-image" src="" alt="Plant Image" style="max-width:200px;display:block;margin-top:10px;" />
    <button id="add-to-plan">Add to Gardening Plan</button>
</section>

<section>
    <h3>Your Gardening Plan</h3>
    <ul id="gardening-plan-list"></ul>
</section>

<script type="module">

    let currentPlant = null;
    let gardeningPlan = JSON.parse(localStorage.getItem('gardeningPlan') || '[]');

    const plantNameElement = document.querySelector('.plant-name');
    const plantScientificNameElement = document.querySelector('.plant-scientific-name');
    const plantTypeElement = document.querySelector('.plant-type');
    const plantCycleElement = document.querySelector('.plant-cycle');
    const plantWateringElement = document.querySelector('.plant-watering');
    const plantSunlightElement = document.querySelector('.plant-sunlight');
    const plantPruningElement = document.querySelector('.plant-pruning');
    const plantDescriptionElement = document.querySelector('.plant-description');
    const plantImageElement = document.getElementById('plant-image');

    function updateGardeningPlanUI() {
        const planList = document.getElementById('gardening-plan-list');
        planList.innerHTML = '';
        gardeningPlan.forEach((plant, idx) => {
            const li = document.createElement('li');
            li.textContent = `${plant.commonName}: Watering - ${plant.watering}, Sunlight - ${plant.sunlight}, Pruning - ${plant.pruning}`;
            planList.appendChild(li);
        });
    }

    async function fetchPlantInfo(plantName) {
        if (!plantName) {
            alert('Please enter a plant name.');
            return;
        }
        try {
            const res = await fetch(`/.netlify/functions/plant?name=${encodeURIComponent(plantName)}`);
            if (!res.ok) throw new Error('Failed to fetch plant info');
            const plantDetails = await res.json();

            if (plantNameElement) plantNameElement.textContent = plantDetails.commonName || 'Unknown';
            if (plantScientificNameElement) plantScientificNameElement.textContent = plantDetails.scientificName || 'Unknown';
            if (plantTypeElement) plantTypeElement.textContent = plantDetails.type || 'Unknown';
            if (plantCycleElement) plantCycleElement.textContent = plantDetails.cycle || 'Unknown';
            if (plantWateringElement) plantWateringElement.textContent = plantDetails.watering || 'No watering info.';
            if (plantSunlightElement) plantSunlightElement.textContent = plantDetails.sunlight || 'No sunlight info.';
            if (plantPruningElement) plantPruningElement.textContent = plantDetails.pruning || 'No pruning info.';
            if (plantDescriptionElement) plantDescriptionElement.textContent = plantDetails.description || 'No description available.';
            if (plantImageElement) plantImageElement.src = plantDetails.default_image?.regular_url || '';
            currentPlant = plantDetails;
        } catch (error) {
            console.error('Error fetching plant info:', error);
            alert('Failed to fetch plant information.');
        }
    }

    document.getElementById('add-to-plan').onclick = () => {
        if (currentPlant) {
            gardeningPlan.push(currentPlant);
            localStorage.setItem('gardeningPlan', JSON.stringify(gardeningPlan));
            updateGardeningPlanUI();
        }
    };

    // On load, show any saved plan
    updateGardeningPlanUI();

    // Listen for custom event to trigger plant info fetch
    window.addEventListener('plantSearch', (event) => {
        const customEvent = event;
        fetchPlantInfo(customEvent.detail.plantName);
    });
</script>

<style>
    section {
        margin: 20px auto;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        max-width: 600px;
        background: white;
    }

    div {
        margin-top: 20px;
        text-align: center;
    }

    select {
        margin: 5px;
        padding: 10px;
        font-size: 16px;
    }

    input {
        margin: 5px;
        padding: 10px;
        font-size: 16px;
    }

    button {
        margin: 5px;
        padding: 10px 20px;
        font-size: 16px;
        cursor: pointer;
    }

    img {
        max-width: 300px;
        margin-top: 10px;
    }
</style>
