---
const { cid } = Astro.props;
---

<edit-comment-form data-cid={cid}>
  <form class="editComment space-y-4 mt-4">
    <input type="hidden" name="uid" />
    <input type="hidden" name="cid" />
    <label class="form-control">
      <span class="label-text">Edit Comment</span>
      <textarea
        name="editComment"
        class="textarea textarea-bordered w-full"
        placeholder="Edit Comment..."
        required></textarea>
    </label>
    <button type="submit" class="btn btn-primary">Update Comment</button>
  </form>
</edit-comment-form>

<script type="module">
  class EditCommentForm extends HTMLElement {
    connectedCallback() {
      const cid = this.dataset.cid;
      this.innerHTML = `
        <form class="editComment">
          <input type="hidden" name="uid" />

          <label>Edit Comment
            <textarea name="editComment" placeholder="New comment..."required></textarea>
          </label>
          <button type="submit">Update Comment</button>
        </form>
      `;

      const form = this.querySelector("form.editComment");
      const uidInput = form.querySelector('input[name="uid"]');

      uidInput.value =
        document.querySelector('meta[name="user-id"]')?.content ||
        "unknown-user";

      form.addEventListener("submit", async (e) => {
        e.preventDefault();
        const formData = new FormData(form);
        formData.append("cid", cid);

        const data = Object.fromEntries(formData.entries());

        console.log("(EditComment.astro) data: ", data);

        const res = await fetch("/.netlify/functions/editComment", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(data),
        });

        const result = await res.json();
        console.log("Result:", result);
      });
    }
  }

  if (!customElements.get("edit-comment-form")) {
    customElements.define("edit-comment-form", EditCommentForm);
  }
</script>
