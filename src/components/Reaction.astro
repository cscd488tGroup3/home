---
const { pid } = Astro.props;
---

<reaction-widget data-pid={pid}></reaction-widget>

<script type="module" is:inline>
  class ReactionWidget extends HTMLElement {
    async connectedCallback() {
      const pid = this.dataset.pid;
      const uid = document.querySelector('meta[name="user-id"]')?.content || 'unknown-user';
      const rid = crypto.randomUUID();

      this.innerHTML = `
        <button class="btn btn-sm btn-outline btn-primary">üëç Like</button>
        <span class="ml-2 text-sm text-gray-500">0 likes</span>
      `;

      const button = this.querySelector('button');
      const counter = this.querySelector('span');

      let liked = false;

      const updateCount = async () => {
        const res = await fetch("/.netlify/functions/aggregateReactions", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ pid }),
        });
        const result = await res.json();
        const count = result[rid] ?? 0;
        counter.textContent = `${count} likes`;
      };

      const checkIfLiked = async () => {
        const res = await fetch("/.netlify/functions/hasReaction", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ pid, uid }),
        });
        const result = await res.json();
        liked = result.liked === true;
        updateButton();
      };

      const updateButton = () => {
        checkIfLiked();
        if (liked) {
          button.classList.remove("btn-outline");
          button.classList.add("btn-secondary");
          button.textContent = "üëé Unlike";
        } else {
          button.classList.add("btn-outline");
          button.classList.remove("btn-secondary");
          button.textContent = "üëç Like";
        }
      };
      
      button.addEventListener("click", async () => {
        checkIfLiked();
        try {
          const endpoint = liked ? "/.netlify/functions/deleteReaction" : "/.netlify/functions/createReaction";
          await fetch(endpoint, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ pid, uid, rid }),
          });
          liked = !liked;
          updateButton();
          await updateCount();
        } catch (err) {
          console.error("Reaction toggle failed:", err);
        }
      });
      
      await updateCount();
      await checkIfLiked();
    }
  }

  if (!customElements.get("reaction-widget")) {
    customElements.define("reaction-widget", ReactionWidget);
  }
</script>
