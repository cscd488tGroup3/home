---
import EditComment from "./EditComment.astro";

const { pid } = Astro.props;
const res = await fetch(`https://cscd488group3-bloombuddy.netlify.app/.netlify/functions/getComments?pid=${pid}`);
const result = await res.json();

const comments = Array.isArray(result) ? result : result?.data ?? [];
---

<div class="mt-0 space-y-0">
  {comments.map(comment => (
    <div class="comment text-sm" data-uid={comment.uid} data-cid={comment.cid}>
      <p>{comment.content}</p>
      <p class="text-xs">
        â€” {comment.uid}
        <button class="edit-comment-btn bg-green-500 hover:bg-green-700 text-black font-bold py-3 px-5 hidden">Edit</button>
        <button class="delete-comment-btn bg-red-500 hover:bg-red-700 text-white font-bold py-3 px-5 hidden">Delete</button>
      </p>
      <EditComment cid={comment.cid} class="edit-comment-form hidden"/>
    </div>
  ))}
</div>

<script type="module">
  document.addEventListener('DOMContentLoaded', () => {
    const currentUser = document.querySelector('meta[name="user-id"]')?.content;

    document.querySelectorAll('[data-uid]').forEach(commentEl => {
      const commentAuthor = commentEl.dataset.uid;
      const cid = commentEl.dataset.cid;

      if (commentAuthor === currentUser) {
        const editBtn = commentEl.querySelector('.edit-comment-btn');
        const deleteBtn = commentEl.querySelector('.delete-comment-btn');

        if (editBtn) {
          editBtn.classList.remove('hidden');
          editBtn.addEventListener('click', () => {
            commentEl.querySelector('.edit-comment-form')?.classList.remove('hidden');
          });
        }

        if (deleteBtn) {
          deleteBtn.classList.remove('hidden');
          deleteBtn.addEventListener('click', async () => {
            try {
              // currentUser instead of commentAuthor, because this prevents non-commentAuthors from deleting the comment if they manually remove the hidden tag from the class list
              const uid = currentUser;
              const res = await fetch('/.netlify/functions/deleteComment', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json'
                },
                body: JSON.stringify({ uid, cid })
              });

              if (res.ok) {
                commentEl.remove();
              } else {
                console.error('Failed to delete comment:', await res.text());
              }
            } catch (err) {
              console.error('Error deleting comment:', err);
            }
          });
        }
      }
    });
  });
</script>
