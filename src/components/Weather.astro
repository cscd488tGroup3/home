---

---

<!-- Weather Display -->
<section id="plant" class="backdrop-blur-md bg-white/50">
  <p>Temp: <span class="temp">Temp</span>Â°<span class="unit">F</span></p>
  <p>City: <span class="city-display">City</span></p>
  <p>Country: <span class="country">Country</span></p>
  <button id="toggleUnit">Switch to Celsius</button>
</section>

<script>
  // Start with Fahrenheit
  let units = "imperial"; // Use 'imperial' for Fahrenheit, 'metric' for Celsius

  // DOM elements
  const nameOfCity = document.querySelector(".city-display") as HTMLElement | null;
  const tempOfCity = document.querySelector(".temp") as HTMLElement | null;
  const countryOfCity = document.querySelector(
    ".country"
  ) as HTMLElement | null;
  const unitOfTemp = document.querySelector(".unit") as HTMLElement | null;
  const toggleUnitButton = document.getElementById(
    "toggleUnit"
  ) as HTMLButtonElement | null;

  // Function to fetch weather data
  async function fetchWeather(cityName: string) {
    const queryData = { cityName, units };
    try {
      const response = await fetch("/.netlify/functions/weather", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(queryData),
        credentials: "include",
      });

      const data = await response.json();
      console.log(data);

      if (response.ok && data.cod === 200) {
        updateWeatherDisplay(data);
      } else {
        alert(data?.message || "City not found or API error.");
      }
    } catch (error) {
      console.error("Weather fetch error:", error);
      alert("Failed to fetch weather. Please try again.");
    }
  }

  // Update the weather display with the fetched data
  function updateWeatherDisplay(data: any) {
    if (nameOfCity) nameOfCity.textContent = data.name;
    if (tempOfCity) tempOfCity.textContent = data.main.temp.toFixed(1); // Round the temperature
    if (countryOfCity) countryOfCity.textContent = data.sys.country;
    if (unitOfTemp) unitOfTemp.textContent = units === "imperial" ? "F" : "C"; // Update the unit display
  }

  // Listen for the custom event to trigger a weather fetch
  window.addEventListener("citySearch", (event) => {
    const cityName = (event as CustomEvent).detail.cityName;
    fetchWeather(cityName);
  });

  // Toggle the unit (Fahrenheit/Celsius)
  if (toggleUnitButton) {
    toggleUnitButton.addEventListener("click", () => {
      // Toggle between Fahrenheit (imperial) and Celsius (metric)
      units = units === "imperial" ? "metric" : "imperial";
      toggleUnitButton.textContent =
        units === "imperial" ? "Switch to Celsius" : "Switch to Fahrenheit";
      const cityName = nameOfCity?.textContent;
      if (cityName) fetchWeather(cityName);
    });
  }

  fetchWeather("New York");
</script>
