---
import Layout from '../layouts/Layout.astro';
// import { createGroupRequest, assignRoleRequest } from "../../public/js/groups.js";
---

<Layout>
    <h1>Create a Group</h1>
    <form id="createGroupForm" onSubmit={async (e) => {
        e.preventDefault();
        const formData = new FormData(e.target);
        const groupData = {
            name: formData.get("groupName"),
            isPrivate: formData.get("isPrivate") === "on", // Check if the private checkbox is checked
            isPublic: formData.get("isPublic") === "on", // Check if the public checkbox is checked
            role: "owner", // Automatically assign the creator as the "Owner"
        };

        // Ensure one option is selected
        if (!groupData.isPrivate && !groupData.isPublic) {
            alert("You must select either Private or Public.");
            return;
        }

        // Ensure only one option is selected
        if (groupData.isPrivate && groupData.isPublic) {
            alert("You can only select either Private or Public, not both.");
            return;
        }

        try {
            const res = await createGroupRequest({
                worker: 'https://astro-d1-integration.ecrawford4.workers.dev/api/groups',
                data: groupData,
            });
            if (res.status === 200) {
                alert("Group created successfully! You are now the Owner.");
                e.target.reset();
            } else {
                alert("Failed to create group.");
            }
        } catch (err) {
            alert("An error occurred while creating the group.");
        }
    }}>
        <label for="groupName">Group Name:</label>
        <input type="text" id="groupName" name="groupName" placeholder="Name the group" required />

        <!-- Checkbox container for private and public group -->
        <div class="checkbox-container">
            <div>
                <input type="checkbox" id="isPublic" name="isPublic" />
                <label for="isPublic">Public Group</label>
            </div>
            <div>
                <input type="checkbox" id="isPrivate" name="isPrivate" />
                <label for="isPrivate">Private Group</label>
            </div>
        </div>

        <button type="submit">Create Group</button>
    </form>

    <!-- Role Assignment Section -->
    <div id="roleAssignmentSection" style="display: none;">
        <h2>Assign Roles</h2>
        <form id="assignRoleForm" onSubmit={async (e) => {
            e.preventDefault();
            const formData = new FormData(e.target);
            const roleData = {
                userId: formData.get("userId"), // ID of the user to assign a role
                role: formData.get("role"), // Role to assign
            };

            try {
                const res = await assignRoleRequest({
                    worker: 'https://astro-d1-integration.ecrawford4.workers.dev/api/roles',
                    data: roleData,
                });
                if (res.status === 200) {
                    alert("Role assigned successfully!");
                } else {
                    alert("Failed to assign role.");
                }
            } catch (err) {
                alert("An error occurred while assigning the role.");
            }
        }}>
            <label for="userId">User ID:</label>
            <input type="text" id="userId" name="userId" placeholder="Enter user ID" required />

            <label for="role">Select Role:</label>
            <select id="role" name="role" required>
                <option value="" disabled selected>Select a role</option>
                <option value="admin">Admin</option>
                <option value="member">Member</option>
            </select>

            <button type="submit">Assign Role</button>
        </form>
    </div>

    <script>
        // Get references to the checkboxes
        const privateCheckbox = document.getElementById('isPrivate');
        const publicCheckbox = document.getElementById('isPublic');
        const roleAssignmentSection = document.getElementById('roleAssignmentSection');

        // Add event listeners to ensure only one checkbox can be selected
        privateCheckbox.addEventListener('change', () => {
            if (privateCheckbox.checked) {
                publicCheckbox.checked = false; // Uncheck the public checkbox
            }
        });

        publicCheckbox.addEventListener('change', () => {
            if (publicCheckbox.checked) {
                privateCheckbox.checked = false; // Uncheck the private checkbox
            }
        });

        // Show role assignment section if the user is an owner or admin
        const currentUserRole = "owner"; // Replace with actual role from your backend
        if (currentUserRole === "owner" || currentUserRole === "admin") {
            roleAssignmentSection.style.display = "block";
        }
    </script>
</Layout>