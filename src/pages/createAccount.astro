---
Astro.props.pageTitle = "Create Account";
import Layout from "../layouts/Layout.astro";
import "../styles/global.css";
---

<Layout>
  <h1>Create Account</h1>
  <form id="createAccountForm" action="#">
    <br />
    <label for="firstname">First Name:</label>
    <input type="text" id="firstname" name="firstname" required />
    <label for="lastname">Last Name:</label>
    <input type="text" id="lastname" name="lastname" required />
    <label for="email">Email:</label>
    <input
      type="text"
      id="email"
      name="email"
      required
      pattern="[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$"
    />
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required />
    <label for="dob">Date of Birth:</label>
    <input type="date" id="dob" name="dob" required />
    <label for="password">Password:</label>
    <input
      type="password"
      id="password"
      name="password"
      required
      pattern="(?=.*[A-Z]).{8,}"
    />
    <label for="confirmpassword">Confirm Password:</label>
    <input
      type="password"
      id="confirmpassword"
      name="confirmpassword"
      required
      pattern="(?=.*[A-Z]).{8,}"
    />
    <br />
    <button type="submit">Submit</button>
  </form>

  <script type="module">
    import { createNewUserAccount } from "/api/user.js";
    document
      .getElementById("createAccountForm")
      .addEventListener("submit", async (e) => {
        e.preventDefault();

        const password = document.getElementById("password").value;
        const confirmPassword =
          document.getElementById("confirmpassword").value;

        if (password !== confirmPassword) {
          alert("Passwords do not match.");
          return;
        }

        // Hash the password
        const hash = await crypto.subtle.digest(
          "SHA-256",
          new TextEncoder().encode(password)
        );
        const hashHex = Array.from(new Uint8Array(hash))
          .map((b) => b.toString(16).padStart(2, "0"))
          .join("");

        const formData = new FormData(e.target);
        const userData = {
          fname: formData.get("firstname"),
          lname: formData.get("lastname"),
          email: formData.get("email"),
          uid: formData.get("username"),
          dob: formData.get("dob"),
          doj: new Date().toISOString().split("T")[0],
          hashpass: hashHex,
        };

        try {
          const response = await fetch("/api/createUser", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(userData),
          });

          if (response.ok) {
            const result = await response.json();
            alert("Account created successfully!");
            const newTab = window.open();
            newTab.document.body.innerText = JSON.stringify(result, null, 2);
          } else {
            throw new Error("Failed to create account");
          }
        } catch (error) {
          console.error("Account creation failed:", error);
          alert("Failed to create account. Please try again.");
        }
      });
  </script>
</Layout>
