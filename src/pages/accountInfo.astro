---
Astro.props.pageTitle = "Account Info";
import Layout from "../layouts/Layout.astro";
import "../styles/global.css";
import { readUserInfoRequest, updateUserInfoRequest } from "../../public/js/user.js";
import { getSession } from "../utils/getSession.ts";

const { user: sessionUser } = await getSession(Astro);
const username = sessionUser ? `User ${sessionUser.id}` : "Guest";

let locals = {
    runtime: {
        env: {
            USR_DB: import.meta.env.USR_DB
        }
    }
};

let accountInfo = null;
let error = null;

try {
    const infoRes = await readUserInfoRequest({
        worker: 'https://astro-d1-integration.ecrawford4.workers.dev/api/info',
        uid: username,
        auth: locals.runtime.env.USR_DB
    });

    if (infoRes.status === 200) {
        const userInfo = await infoRes.json();

        const adminRes = await fetch('https://astro-d1-integration.ecrawford4.workers.dev/api/admin', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                uid: username,
                auth: locals.runtime.env.USR_DB
            })
        });

        if (adminRes.status === 200) {
            const adminData = await adminRes.json();
            accountInfo = [{
                ...userInfo[0],
                email: adminData.email
            }];
        } else {
            error = { message: "Failed to fetch email from admin API" };
        }
    } else {
        error = { message: "Failed to fetch basic user info" };
    }
} catch (err) {
    error = { message: "An unexpected error occurred while fetching user data" };
}
---
<Layout>
    <h1>Account Info</h1>
    {accountInfo ? (
        <div>
            <p><strong>Username:</strong> {username}</p>

            <!-- Field block -->
            <label>
                First Name:
                <input type="text" id="fname" defaultValue={accountInfo[0]?.fname} />
                <button type="button" onClick={async () => {
                    const value = document.getElementById("fname").value;
                    const res = await updateUserInfoRequest({
                        worker: 'https://astro-d1-integration.ecrawford4.workers.dev/api/edit/info',
                        data: { uid: username, fname: value },
                        auth: locals.runtime.env.USR_DB
                    });
                    alert(res.status === 200 ? "First name updated!" : "Failed to update first name.");
                }}>Save</button>
            </label>

            <label>
                Last Name:
                <input type="text" id="lname" defaultValue={accountInfo[0]?.lname} />
                <button type="button" onClick={async () => {
                    const value = document.getElementById("lname").value;
                    const res = await updateUserInfoRequest({
                        worker: 'https://astro-d1-integration.ecrawford4.workers.dev/api/edit/info',
                        data: { uid: username, lname: value },
                        auth: locals.runtime.env.USR_DB
                    });
                    alert(res.status === 200 ? "Last name updated!" : "Failed to update last name.");
                }}>Save</button>
            </label>

            <label>
                Email:
                <input type="email" id="email" defaultValue={accountInfo[0]?.email} />
                <button type="button" onClick={async () => {
                    const value = document.getElementById("email").value;
                    const res = await updateUserInfoRequest({
                        worker: 'https://astro-d1-integration.ecrawford4.workers.dev/api/edit/info',
                        data: { uid: username, email: value },
                        auth: locals.runtime.env.USR_DB
                    });
                    alert(res.status === 200 ? "Email updated!" : "Failed to update email.");
                }}>Save</button>
            </label>

            <label>
                Date of Birth:
                <input type="date" id="dob" defaultValue={accountInfo[0]?.dob} />
                <button type="button" onClick={async () => {
                    const value = document.getElementById("dob").value;
                    const res = await updateUserInfoRequest({
                        worker: 'https://astro-d1-integration.ecrawford4.workers.dev/api/edit/info',
                        data: { uid: username, dob: value },
                        auth: locals.runtime.env.USR_DB
                    });
                    alert(res.status === 200 ? "Date of birth updated!" : "Failed to update date of birth.");
                }}>Save</button>
            </label>

            <label>
                Password:
                <input type="password" id="password" />
                <button type="button" onClick={async () => {
                    const value = document.getElementById("password").value;
                    if (!value) {
                        alert("Password cannot be empty.");
                        return;
                    }
                    const res = await updateUserInfoRequest({
                        worker: 'https://astro-d1-integration.ecrawford4.workers.dev/api/edit/info',
                        data: { uid: username, password: value },
                        auth: locals.runtime.env.USR_DB
                    });
                    alert(res.status === 200 ? "Password updated!" : "Failed to update password.");
                }}>Save</button>
            </label>
        </div>
    ) : (
        <p>{error?.message || "User not found"}</p>
    )}
</Layout>
