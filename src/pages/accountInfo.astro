---
Astro.props.pageTitle = "Account Info";
import Layout from "../layouts/Layout.astro";
import "../styles/global.css";
import { getSession } from "../utils/getSession.ts";

const { user: sessionUser } = await getSession(Astro);
const username = sessionUser ? `${sessionUser.id}` : "Guest";

let locals = {
    runtime: {
        env: {
            USR_DB: import.meta.env.USR_DB,
            USR_DB_W: import.meta.env.USR_DB_W
        }
    }
};

let accountInfo = null;
let error = null;

console.log("(accountInfo.astro) Username:", username);
console.log("(accountInfo.astro) USR_DB:", locals.runtime.env.USR_DB);
console.log("(accountInfo.astro) USR_DB_W:", locals.runtime.env.USR_DB_W);

try {
    const infoRes = await fetch(`https://astro-d1-integration.ecrawford4.workers.dev/api/info?uid=${username}&auth=${locals.runtime.env.USR_DB}`);

    if (infoRes.status === 200) {
        //console.log("(accountInfo.astro) infoRes:", infoRes);
        const infoData = await infoRes.json();
        
        console.log("(accountInfo.astro) infoData:", infoData);

        const adminRes = await fetch(`https://astro-d1-integration.ecrawford4.workers.dev/api/admin?uid=${username}&auth=${locals.runtime.env.USR_DB}`);
        
        if (adminRes.status === 200) {
            //console.log("(accountInfo.astro) adminRes:", adminRes);
            const adminData = await adminRes.json();

            console.log("(accountInfo.astro) adminData:", adminData);

            const privRes = await fetch(`https://astro-d1-integration.ecrawford4.workers.dev/api/priv/get?uid=${username}&auth=${locals.runtime.env.USR_DB}`);

            if (privRes.status === 200) {
                console.log("(accountInfo.astro) privRes:", privRes);
                const privData = await privRes.json();

                console.log("(accountInfo.astro) privData:", privData);

                accountInfo = [{
                    fname: infoData[0].fname,
                    lname: infoData[0].lname, 
                    dob: infoData[0].dob, 
                    doj: infoData[0].doj, 
                    email: adminData[0].email,
                    priv: privData[0].priv
                }]; 
            } else {
                console.error("User info fetch error:", err);
                error = {message: "Failed to fetch privacy setting from priv API"}
            }
        } else {
            console.error("User info fetch error:", err);
            error = { message: "Failed to fetch email from admin API" };
        }
    } else {
        console.error("User info fetch error:", err);
        error = { message: "Failed to fetch basic user info" };
    }
} catch (err) {
    console.error("User info fetch error:", err);
    error = { message: "An unexpected error occurred while fetching\nuser data. In case you are logged in as Guest,\nplease log in to view your account information." };
}

console.log("(accountInfo.astro) accountInfo:", accountInfo);
---
<Layout>
  <h1>Account Info</h1>
  {accountInfo ? (
    <div>
      <div class="info-block" id="info-block">
        <p><strong>Username:</strong> <p id="right">{username}</p></p>
        <p><strong>First Name:</strong> <p id="right">{accountInfo[0]?.fname}</p></p>
        <p><strong>Last Name:</strong> <p id="right">{accountInfo[0]?.lname}</p></p>
        <p><strong>Email:</strong> <p id="right">{accountInfo[0]?.email}</p></p>
        <p><strong>Date of Birth:</strong> <p id="right">{accountInfo[0]?.dob}</p></p>
        <p><strong>Privacy:</strong> <p id="right">{accountInfo[0]?.priv}</p></p>
      </div>

      <h2>Update Information</h2>
      <form>

      <label>
        First Name:
        <input type="text" id="fname" defaultValue={accountInfo[0]?.fname} />
        <button id="search-button" type="button" onClick={async () => {
          const value = document.getElementById("fname").value;
          const res = await fetch(`https://astro-d1-integration.ecrawford4.workers.dev/api/edit/info?uid=${username}&fname=${value}&auth=${locals.runtime.env.USR_DB}&wauth=${locals.runtime.env.USR_DB_W}`);
          alert(res.status === 200 ? "First name updated!" : "Failed to update first name.");
        }}>Save</button>
      </label>

      <label>
        Last Name:
        <input type="text" id="lname" defaultValue={accountInfo[0]?.lname} />
        <button id="search-button" type="button" onClick={async () => {
          const value = document.getElementById("lname").value;
          const res = await fetch(`https://astro-d1-integration.ecrawford4.workers.dev/api/edit/info?uid=${username}&lname=${value}&auth=${locals.runtime.env.USR_DB}&wauth=${locals.runtime.env.USR_DB_W}`);
          alert(res.status === 200 ? "Last name updated!" : "Failed to update last name.");
        }}>Save</button>
      </label>

      <label>
        Email:
        <input type="email" id="email" defaultValue={accountInfo[0]?.email} />
        <button id="search-button" type="button" onClick={async () => {
          const value = document.getElementById("email").value;
          const res = await fetch(`https://astro-d1-integration.ecrawford4.workers.dev/api/edit/info?uid=${username}&email=${value}&auth=${locals.runtime.env.USR_DB}&wauth=${locals.runtime.env.USR_DB_W}`);
          alert(res.status === 200 ? "Email updated!" : "Failed to update email.");
        }}>Save</button>
      </label>

      <label>
        Date of Birth:
        <input type="date" id="dob" defaultValue={accountInfo[0]?.dob} />
        <button id="search-button" type="button" onClick={async () => {
          const value = document.getElementById("dob").value;
          const res = await fetch(`https://astro-d1-integration.ecrawford4.workers.dev/api/edit/info?uid=${username}&dob=${value}&auth=${locals.runtime.env.USR_DB}&wauth=${locals.runtime.env.USR_DB_W}`);
          alert(res.status === 200 ? "DOB updated!" : "Failed to update DOB.");
        }}>Save</button>
      </label>

      <label>
        Password:
        <input type="password" id="password" />
        <button id="search-button" type="button" onClick={async () => {
          const value = document.getElementById("password").value;
          if (!value) {
            alert("Password cannot be empty.");
            return;
          }
          const res = await fetch(`https://astro-d1-integration.ecrawford4.workers.dev/api/edit/info?uid=${username}&hashpass=${value}&auth=${locals.runtime.env.USR_DB}&wauth=${locals.runtime.env.USR_DB_W}`);
          alert(res.status === 200 ? "Password updated!" : "Failed to update password.");
        }}>Save</button>
      </label>

      <label>
        Privacy Setting:
        <select id="priv" defaultValue={accountInfo[0]?.priv}>
          <option value="public">Public</option>
          <option value="private">Private</option>
        </select>
        <button id="search-button" type="button" onClick={async () => {
          const value = document.getElementById("priv").value;
          const res = await fetch(`https://astro-d1-integration.ecrawford4.workers.dev/api/priv/update?uid=${username}&priv=${value}&auth=${locals.runtime.env.USR_DB}&wauth=${locals.runtime.env.USR_DB_W}`);
          alert(res.status === 200 ? "Privacy updated!" : "Failed to update privacy.");
        }}>Save</button>
      </label>
  </form>

    </div>
  ) : (
    <p id="error-badge" style="white-space: pre-line;">{error?.message || "User not found"}</p>
  )}
</Layout>
